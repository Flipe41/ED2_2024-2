/*
O código abaixo apresenta a implementação de uma lista linear.

Para esse exemplo, faça:
- Implemente funções adicionais como buscar(int elemento) para encontrar a posição de um elemento na lista.
ou 
- Adicione métodos para inverter a lista, encontrar o máximo/mínimo, ou ordenar a lista.
*/

#include <stdio.h>
#define MAX_SIZE 10

int lista[MAX_SIZE];
int tamanho = 0;

void inserir(int elemento) {
    if (tamanho < MAX_SIZE) {
        lista[tamanho++] = elemento;
    } else {
        printf("Lista cheia!\n");
    }
}

void remover(int index) {
    if (index < 0 || index >= tamanho) {
        printf("Índice inválido!\n");
    } else {
        for (int i = index; i < tamanho - 1; i++) {
            lista[i] = lista[i + 1];
        }
        tamanho--;
    }
}

void imprimir() {
    printf("Elementos da lista:\n");
    for (int i = 0; i < tamanho; i++) {
        printf("%d ", lista[i]);
    }
    printf("\n");
}
int buscar(int elemento) {
    for (int i = 0; i < tamanho; i++) {
        if (lista[i] == elemento) {
            return i; // Retorna a posição do elemento
        }
    }
    return -1; // Retorna -1 se o elemento não for encontrado
}
int encontrar_maximo() {
    int max = lista[0];
    for (int i = 1; i < tamanho; i++) {
        if (lista[i] > max) {
            max = lista[i];
        }
    }
    return max;
}

int encontrar_minimo() {
    int min = lista[0];
    for (int i = 1; i < tamanho; i++) {
        if (lista[i] < min) {
            min = lista[i];
        }
    }
    return min;
}

void ordenar() {
    int temp;
    for (int i = 0; i < tamanho - 1; i++) {
        for (int j = i + 1; j < tamanho; j++) {
            if (lista[i] > lista[j]) {
                temp = lista[i];
                lista[i] = lista[j];
                lista[j] = temp;
            }
        }
    }
}
void inverter() {
    int temp;
    for (int i = 0; i < tamanho / 2; i++) {
        temp = lista[i];
        lista[i] = lista[tamanho - i - 1];
        lista[tamanho - i - 1] = temp;
    }
}

int main() {
    inserir(10);
    inserir(20);
    inserir(30);
    imprimir();
    remover(1);
    imprimir();
    inserir(5);
    inserir(40);
    imprimir();

    int pos = buscar(30);
    if (pos != -1) {
        printf("Elemento 30 encontrado na posição: %d\n", pos);
    } else {
        printf("Elemento 30 não encontrado\n");
    }

    inverter();
    imprimir();

    printf("Máximo: %d\n", encontrar_maximo());
    printf("Mínimo: %d\n", encontrar_minimo());

    ordenar();
    imprimir();

    return 0;
}
